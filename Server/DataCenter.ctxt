#BlueJ class context
comment0.target=DataCenter
comment0.text=\r\n\ Diese\ Klasse\ speichert\ alle\ Benutzer\ und\ alle\ Immobilien.\r\n\r\n\ @author\ Fabio\ Kron.\r\n\ @version\ 1.2021.\r\n
comment1.params=
comment1.target=java.lang.String[]\ getRealEstatesInformation()
comment1.text=\r\n\ Die\ Methode\ gibt\ Informationen\ zu\ jeder\ ver\u00F6ffentlichten\ Immobilie\ zur\u00FCck.\r\n\ \r\n\ @return\ realEstatesInfo\ String[]\ -\ Array\ aus\ Informationsstrings\ der\ Immobilien.\r\n
comment2.params=eMail\ password
comment2.target=User\ authenticateUser(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Es\ wird\ \u00FCberpr\u00FCft,\ ob\ die\ E-Mail\ und\ das\ Passwort\ mit\ einem\ gespeicherten\r\n\ Nutzer\ \u00FCbereinstimmen;\ falls\ das\ der\ Fall\ ist,\ wird\ dieser\ Nutzer\ zur\u00FCckgegeben.\r\n\ \r\n\ @param\ eMail\ String\ -\ E-Mail\ des\ Nutzers\ der\ authentifiziert\ werden\ soll.\r\n\ @param\ passwort\ String\ -\ verschl\u00FCsseltes\ Passwort\ des\ Nutzers\ der\ authentifiziert\r\n\ werden\ soll.\r\n\ \r\n\ @return\ user\ User\ -\ falls\ die\ Anmeldedaten\ mit\ einem\ Nutzer\ \u00FCbereinstimmen;\r\n\ ansonsten\ null.\r\n
comment3.params=toRemove
comment3.target=void\ removeRealEstate(RealEstate)
comment3.text=\r\n\ Die\ \u00FCbergebene\ Immobilie\ wird\ aus\ dem\ DataCenter\ gel\u00F6scht.\r\n\ \r\n\ @param\ toRemove\ RealEstate\ -\ Immobilie,\ die\ gel\u00F6scht\ werden\ soll.\r\n
comment4.params=newRealEstate
comment4.target=void\ addRealEstate(RealEstate)
comment4.text=\r\n\ Die\ \u00FCbergebene\ Immobilie\ wird\ im\ DataCenter\ gespeichert.\r\n\ \r\n\ @param\ newRealEstate\ RealEstate\ -\ die\ Immobilie,\ die\ gespeichert\ werden\ soll.\r\n
comment5.params=newUser
comment5.target=void\ addNewUser(User)
comment5.text=\r\n\ Die\ Methode\ speichert\ neue\ Benutzer.\r\n\ \r\n\ @param\ newUser\ User\:\ der\ neu\ erstellte\ Benutzer.\r\n
numComments=6
