#BlueJ class context
comment0.target=ClientInterface
comment0.text=\r\n\ Diese\ Klasse\ ist\ f\u00FCr\ die\ Kommunikation\ mit\ dem\ Client\ verantwortlich\r\n\r\n\ @author\ Fabio\ Kron\r\n\ @version\ 12.2020\r\n
comment1.params=client
comment1.target=ClientInterface(java.net.Socket)
comment1.text=\r\n\ Verbindungsaufbau\ mit\ dem\ Client,\r\n\ Initialisieren\ der\ dazu\ ben\u00F6tigten\ Schnittstellen.\r\n\ \r\n\ @param\ client\ \:\ Socket\ \r\n
comment10.params=
comment10.target=int\ receiveNumOfRoomsInput()
comment10.text=\r\n\ Der\ Benutzer\ wird\ aufgefordert,\ die\ Anzahl\ der\ R\u00E4ume\ der\ Immobilie\ einzugeben.\r\n\ \r\n\ @return\ numOfRooms\ int\ -\ eingegebene\ Anzahl\ der\ R\u00E4ume\ der\ Immobilie.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung\ mit\ dem\ Client.\r\n
comment11.params=
comment11.target=java.lang.String\ receiveAddressInput()
comment11.text=\r\n\ Der\ Benutzer\ wird\ dazu\ aufgefordert,\ die\ Adresse\ seiner\ Immobilie\ einzugeben.\r\n\ \r\n\ @return\ address\ String\ -\ eingegebene\ Adresse\ der\ Immobilie.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung\ mit\ dem\ Client.\r\n
comment12.params=
comment12.target=double\ receivePriceInput()
comment12.text=\r\n\ Der\ Benutzer\ wird\ dazu\ aufgefordert,\ den\ Preis\ seiner\ Immobilie\ einzugeben.\r\n\ \r\n\ @return\ price\ double\ -\ Eingegebener\ Preis\ der\ Immobilie.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung\ mit\ dem\ Client.\r\n
comment13.params=name
comment13.target=java.lang.String\ getUserMenu(java.lang.String)
comment13.text=\r\n\ Diese\ Methode\ gibt\ das\ Nutzermen\u00FC\ zur\u00FCck.\r\n\ \r\n\ @param\ name\ String\ -\ Name\ des\ Benutzers.\r\n\ \r\n\ @return\ userMenu\ String\ -\ Das\ Benutzermen\u00FC.\r\n
comment14.params=
comment14.target=void\ displaySignUpMenu()
comment14.text=\r\n\ Benutzeroberfl\u00E4che,\ um\ einen\ neuen\ Nutzer\ zu\ registrieren\:\r\n\ Nutzer\ wird\ zur\ Eingabe\ von\ Name,\ E-Mail\ und\ Passwort\ aufgefordert\r\n\ Neuer\ Nutzer\ wird\ erstellt\ und\ gespeichert.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung.\r\n
comment15.params=
comment15.target=java.lang.String\ receivePasswordInput()
comment15.text=\r\n\ In\ der\ Methode\ wird\ der\ Nutzer\ dazu\ aufgefordert,\ sein\ Passort\ einzugeben;\r\n\ dieses\ wird\ dann\ verschl\u00FCsselt\ zur\u00FCckgegeben.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ der\ Kommunikation\ mit\ dem\ Client.\r\n\ \r\n\ @return\ password\ verschl\u00FCsseltes\ Passwort\ des\ Benutzers.\r\n
comment16.params=
comment16.target=java.lang.String\ receiveEMailInput()
comment16.text=\r\n\ Der\ Benutzer\ wird\ aufgefordert,\ seine\ E-Mail\ einzugeben;\r\n\ daraufhin\ wird\ die\ Eingabe\ validiert.\r\n\ \r\n\ @throws\ IOException\ bei\ Problemen\ der\ Kommunikation\ mit\ dem\ Client.\r\n\ \r\n\ @return\ eMail\ validierte\ E-Mail\ des\ Benutzers.\r\n
comment17.params=
comment17.target=java.lang.String\ receiveNameInput()
comment17.text=\r\n\ Der\ Benutzer\ wird\ aufgefordert,\ seinen\ Namen\ einzugeben;\r\n\ daraufhin\ wird\ der\ Name\ validiert.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ der\ Kommunikation\ mit\ dem\ Client.\r\n\ \r\n\ @return\ name\ validierter\ Name\ des\ Benutzers.\r\n
comment18.params=
comment18.target=java.lang.String\ getMainMenu()
comment18.text=\r\n\ R\u00FCckgabe\ des\ Texts\ des\ Hauptmen\u00FCs.\r\n\ \r\n\ @return\ mainMenu\ \:\ String;\ das\ Hauptmen\u00FC\ als\ String.\r\n
comment19.params=
comment19.target=java.lang.String\ getUserInput()
comment19.text=\r\n\ Fordern\ und\ Empfangen\ einer\ Benutzereingabe\ beim\ Client.\r\n\ \r\n\ @return\ userInput\ \:\ String;\ Benutzereingabe\ beim\ Client.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung.\r\n
comment2.params=
comment2.target=void\ run()
comment2.text=\r\n\ Kommunikation\ mit\ dem\ Client\:\ Benutzerobefl\u00E4che\ und\ Benutzereingaben.\r\n
comment3.params=
comment3.target=void\ displayMainMenu()
comment3.text=\r\n\ Senden\ des\ Hauptmen\u00FCs\ an\ den\ Client;\r\n\ Empfangen\ und\ Verarbeiten\ der\ Benutzereingabe.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung.\r\n
comment4.params=userInput
comment4.target=void\ processMainMenuInput(java.lang.String)
comment4.text=\r\n\ Verarbeiten\ der\ Benutzereingabe\ im\ Hauptmen\u00FC\r\n\ mit\ m\u00F6glicher\ Einleitung\ des\ n\u00E4chsten\ Programmschritts.\r\n\ \r\n\ @param\ userInput\ \:\ String\ Benutzereingabe\ im\ Hauptmen\u00FC.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung.\r\n
comment5.params=
comment5.target=void\ displaySignInMenu()
comment5.text=\r\n\ Der\ Benutzer\ wird\ dazu\ aufgefordert,\ sich\ anzumelden;\r\n\ die\ Eingaben\ werden\ \u00FCberpr\u00FCft\ und\ falls\ diese\ stimmen,\ wird\ der\ Benutzer\ in\ das\r\n\ Benutzermen\u00FC\ weitergeleitet,\ wo\ er\ weitere\ Aktionen\ durchf\u00FChren\ kann.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung.\r\n
comment6.params=user
comment6.target=void\ displayUserMenu(User)
comment6.text=\r\n\ Benutzermen\u00FC\:\ \r\n\ Der\ Nutzer\ kann\ zwischen\ verschiedenen\ Aktionen\ ausw\u00E4hlen\:\r\n\ -\ Immobilien\ hinzuf\u00FCgen\r\n\ -\ Eigene\ Immobilien\ ansehen\r\n\ -\ Eigene\ Immobilie\ entfernen\r\n\ -\ Alle\ angebotenen\ Immobilien\ suchen\r\n\ -\ Abmelden.\r\n\ \r\n\ @param\ user\ User\ -\ Der\ angemeldete\ Nutzer.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ der\ Kommunikation\ mit\ dem\ Client.\r\n
comment7.params=userInput\ user
comment7.target=void\ processUserMenuInput(java.lang.String,\ User)
comment7.text=\r\n\ Die\ Benutzereingabe\ im\ Benutzermen\u00FC\ wird\ verarbeitet\r\n\ und\ die\ n\u00E4chste\ Aktion\ wird\ gestartet.\r\n\ \r\n\ @param\ userInput\ String\ -\ Nutzereingabe\ des\ Benutzermen\u00FCs.\r\n\ @param\ user\ User\ -\ angemeldeter\ Nutzer,\ der\ die\ Eingabe\ gemacht\ hat.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ der\ Kommunikation\ mit\ dem\ Client.\r\n
comment8.params=user
comment8.target=void\ displayAddRealEstateMenu(User)
comment8.text=\r\n\ Durch\ diese\ Methode\ kann\ der\ Benutzer\ neue\ Immobilien\ erstellen\ und\ speichern.\r\n\ \r\n\ @param\ user\ User\ -\ der\ angemeldete\ Benutzer.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung\ mit\ dem\ Client.\r\n
comment9.params=
comment9.target=int\ receiveFloorAreaInput()
comment9.text=\r\n\ Der\ Benutzer\ wird\ aufgefordert,\ die\ Fl\u00E4che\ der\ Immobilie\ einzugeben.\r\n\ \r\n\ @return\ floorArea\ int\ -\ eingegebene\ Fl\u00E4che\ der\ Immobilie.\r\n\ \r\n\ @throws\ IOException\ bei\ Fehlern\ mit\ der\ Verbindung\ mit\ dem\ Client.\r\n
numComments=20
